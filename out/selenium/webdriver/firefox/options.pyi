from selenium.common.exceptions import InvalidArgumentException as InvalidArgumentException
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities as DesiredCapabilities
from selenium.webdriver.common.options import ArgOptions as ArgOptions
from selenium.webdriver.common.proxy import Proxy as Proxy
from selenium.webdriver.firefox.firefox_binary import FirefoxBinary as FirefoxBinary
from selenium.webdriver.firefox.firefox_profile import FirefoxProfile as FirefoxProfile
from typing import Any

class Log:
    level: Any
    def __init__(self) -> None: ...
    def to_capabilities(self): ...

class Options(ArgOptions):
    KEY: str
    log: Any
    def __init__(self) -> None: ...
    @property
    def binary(self): ...
    @binary.setter
    def binary(self, new_binary) -> None: ...
    @property
    def binary_location(self): ...
    @binary_location.setter
    def binary_location(self, value) -> None: ...
    @property
    def accept_insecure_certs(self): ...
    @accept_insecure_certs.setter
    def accept_insecure_certs(self, value) -> None: ...
    @property
    def preferences(self): ...
    def set_preference(self, name, value) -> None: ...
    @property
    def proxy(self): ...
    @proxy.setter
    def proxy(self, value) -> None: ...
    @property
    def profile(self): ...
    @profile.setter
    def profile(self, new_profile) -> None: ...
    @property
    def headless(self): ...
    @headless.setter
    def headless(self, value) -> None: ...
    def to_capabilities(self): ...
    @property
    def default_capabilities(self): ...
