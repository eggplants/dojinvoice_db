from .options import Options as Options
from .remote_connection import ChromeRemoteConnection as ChromeRemoteConnection
from .service import Service as Service
from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver
from typing import Any

DEFAULT_PORT: int
DEFAULT_SERVICE_LOG_PATH: Any

class WebDriver(RemoteWebDriver):
    port: Any
    service: Any
    def __init__(self, executable_path: str = ..., port=..., options: Any | None = ..., service_args: Any | None = ..., desired_capabilities: Any | None = ..., service_log_path=..., chrome_options: Any | None = ..., service: Any | None = ..., keep_alive: bool = ...) -> None: ...
    def launch_app(self, id): ...
    def get_network_conditions(self): ...
    def set_network_conditions(self, **network_conditions) -> None: ...
    def execute_cdp_cmd(self, cmd, cmd_args): ...
    def get_sinks(self): ...
    def get_issue_message(self): ...
    def set_sink_to_use(self, sink_name): ...
    def start_tab_mirroring(self, sink_name): ...
    def stop_casting(self, sink_name): ...
    def quit(self) -> None: ...
    def create_options(self): ...
